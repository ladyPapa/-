[
        {
            "ID": "709",
            "typeID": "14",
            "question": "Flash、Ajax各自的优缺点，在使用中如何取舍？",
            "answer": "Ajax的优势\r\n（1） 可搜索型\r\n（2） 开放性\r\n（3） 费用\r\n（4） 易用性\r\n（5） 易于开发\r\nFlash的优势\r\n（1） 多媒体处理\r\n（2） 兼容性\r\n（3） 矢量图形 比SVG，Canvas优势大很多\r\n（4） 客户端资源调度，比如麦克风，摄像头"
        },
        {
            "ID": "708",
            "typeID": "14",
            "question": "如何控制网页在网络传输过程中的数据量？",
            "answer": "启用GZIP压缩\r\n保持良好的编程习惯，避免重复的CSS，JavaScript代码，多余的HTML标签和属性"
        },
        {
            "ID": "707",
            "typeID": "14",
            "question": "浏览器的对象模型？",
            "answer": "window\r\n\r\n顶级对象\r\n\r\nwindow.alert(msg)\r\n\r\nwindow.prompt()\r\n\r\nwindow.confirm()\r\n\r\nif(window.confirm()){\r\n\r\n...\r\n\r\n}\r\n\r\nwindow.open()\r\n\r\nwindow.close()\r\n\r\ndocument\r\n\r\ndocument.write()\r\n\r\nhistory\r\n\r\n当用户浏览网页时，浏览器保存了一个最近所访问网页的url列表。这个列表就是用history对象表示。\r\n\r\nhistory.back():后退\r\n\r\nhistory.forward():前进\r\n\r\nhistory.go(n):正数表示向前，负数表示向后\r\n\r\nlocation\r\n\r\n表示当前打开的窗口或框架的URL信息。\r\n\r\nlocation.href：重定向\r\n\r\n等价于location.assign(url)\r\n\r\nlocation.host：类似www.163.com:80\r\n\r\nnavigator\r\n\r\n表示浏览器的信息及js运行的环境\r\n\r\nnavigator.cookieEnabled：该属性表示是否启用cookie\r\n\r\nscreen\r\n\r\n用于显示网页的显示器的大小和颜色\r\n\r\nscreen.width/screen.height：表示显示器的分辨率（总的宽度，高度）"
        },
        {
            "ID": "706",
            "typeID": "14",
            "question": "列举javaScript的3种主要数据类型，2种复合数据类型和2种特殊数据类型。",
            "answer": "主要数据类型：string, boolean, number\r\n\r\n复合数据类型：function, object"
        },
        {
            "ID": "705",
            "typeID": "14",
            "question": "js中的3种弹出式消息提醒（警告窗口，确认窗口，信息输入窗口）的命令式什么？",
            "answer": "alert\r\nconfirm\r\nprompt"
        },
        {
            "ID": "704",
            "typeID": "14",
            "question": "form中的input可以设置为readonly和disable，请问2者有什么区别？",
            "answer": "readonly不可编辑，但可以选择和复制；值可以传递到后台\r\ndisabled不能编辑，不能复制，不能选择；值不可以传递到后台"
        },
        {
            "ID": "703",
            "typeID": "14",
            "question": "avascript怎样选中一个checkbox，怎样设置它无效？",
            "answer": "document.all.cb1[0].disabled = true;"
        },
        {
            "ID": "702",
            "typeID": "14",
            "question": "javascript是面向对象的，怎么体现javascript的继承关系？",
            "answer": "使用prototype来实现。"
        },
        {
            "ID": "701",
            "typeID": "14",
            "question": "（设计题）想实现一个对页面某个节点的拖曳？如何做？（使用原生JS）",
            "answer": "回答出概念即可，下面是几个要点\r\n\r\n给需要拖拽的节点绑定mousedown, mousemove, mouseup事件\r\nmousedown事件触发后，开始拖拽\r\nmousemove时，需要通过event.clientX和clientY获取拖拽位置，并实时更新位置\r\nmouseup时，拖拽结束\r\n需要注意浏览器边界的情况"
        },
        {
            "ID": "700",
            "typeID": "14",
            "question": "在Javascript中什么是伪数组？如何将伪数组转化为标准数组？",
            "answer": "伪数组（类数组）：无法直接调用数组方法或期望length属性有什么特殊的行为，但仍可以对真正数组遍历方法来遍历它们。典型的是函数的argument参数，还有像调用getElementsByTagName,document.childNodes之类的,它们都返回NodeList对象都属于伪数组。可以使用Array.prototype.slice.call(fakeArray)将数组转化为真正的Array对象。"
        },
        {
            "ID": "699",
            "typeID": "14",
            "question": "正则表达式构造函数var reg=new RegExp(“xxx”)与正则表达字面量var reg=//有什么不同？匹配邮箱的正则表达式？",
            "answer": "当使用RegExp()构造函数的时候，不仅需要转义引号（即”表示”），并且还需要双反斜杠（即表示一个）。使用正则表达字面量的效率更高。 \r\n\r\n邮箱的正则匹配：\r\nvar regMail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((.[a-zA-Z0-9_-]{2,3}){1,2})$/;"
        },
        {
            "ID": "698",
            "typeID": "14",
            "question": "有这样一个URL：http://item.taobao.com/item.htm?a=1&b=2&c=&d=xxx&e，请写一段JS程序提取URL中的各个GET参数(参数名和参数个数不确定)，将其按key-value形式返回到一个json结构中，如{a:’1′, b:’2′, c:”, d:’xxx’, e:undefined}。",
            "answer": "function serilizeUrl(url) {\r\n    var result = {};\r\n    url = url.split(\"?\")[1];\r\n    var map = url.split(\"&\");\r\n    for(var i = 0, len = map.length; i < len; i++) {\r\n        result<script>jQuery(function($) {$(\"#google-maps-1\").gMap({controls: false,scrollwheel: false,markers: [{address: \"\",icon: {image: \"http://blog.jobbole.com/wp-content/themes/jobboleblogv3/_assets/img/_colors/red/pin.png\",iconsize: [32, 32],iconanchor: [16,27],infowindowanchor: [16, 27]}}],address: \"\",zoom: 15,icon: {image: \"http://blog.jobbole.com/wp-content/themes/jobboleblogv3/_assets/img/_colors/red/pin.png\",iconsize: [32, 32],iconanchor: [16,27],infowindowanchor: [16, 27]}});});</script><div id=\"google-maps-1\" class=\"google-maps\" style=\"width: 100%; height: 200px;\"></div>.split(\"=\")[0]] = map[i].split(\"=\")[1];\r\n    }\r\n    return result;\r\n}"
        },
        {
            "ID": "697",
            "typeID": "14",
            "question": "怎样添加、移除、移动、复制、创建和查找节点（原生JS，实在基础，没细写每一步）",
            "answer": "1）创建新节点\r\n\r\ncreateDocumentFragment()    //创建一个DOM片段\r\n\r\ncreateElement()   //创建一个具体的元素\r\n\r\ncreateTextNode()   //创建一个文本节点\r\n\r\n2）添加、移除、替换、插入\r\n\r\nappendChild()      //添加\r\n\r\nremoveChild()      //移除\r\n\r\nreplaceChild()      //替换\r\n\r\ninsertBefore()      //插入\r\n\r\n3）查找\r\n\r\ngetElementsByTagName()    //通过标签名称\r\n\r\ngetElementsByName()     //通过元素的Name属性的值\r\n\r\ngetElementById()        //通过元素Id，唯一性\r\n"
        },
        {
            "ID": "696",
            "typeID": "14",
            "question": "用js实现随机选取10–100之间的10个数字，存入一个数组，并排序。",
            "answer": "var iArray = []; \r\nfuntion getRandom(istart, iend){\r\n        var iChoice = istart - iend +1;\r\n        return Math.floor(Math.random() * iChoice + istart;\r\n}\r\nfor(var i=0; i<10; i++){\r\n        iArray.push(getRandom(10,100));\r\n}\r\niArray.sort();"
        },
        {
            "ID": "695",
            "typeID": "14",
            "question": "foo = foo||bar ，这行代码是什么意思？为什么要这样写？",
            "answer": "if(!foo) foo = bar; //如果foo存在，值不变，否则把bar的值赋给foo。\r\n\r\n短路表达式：作为”&&”和”||”操作符的操作数表达式，这些表达式在进行求值时，只要最终的结果已经可以确定是真或假，求值过程便告终止，这称之为短路求值。"
        },
        {
            "ID": "694",
            "typeID": "14",
            "question": "为了保证页面输出安全，我们经常需要对一些特殊的字符进行转义，请写一个函数escapeHtml，将<, >, &, “进行转义",
            "answer": "function escapeHtml(str) {\r\nreturn str.replace(/[<>”&]/g, function(match) {\r\n    switch (match) {\r\n                   case “<”:\r\n                      return “&lt;”;\r\n                   case “>”:\r\n                      return “&gt;”;\r\n                   case “&”:\r\n                      return “&amp;”;\r\n                   case “””:\r\n                      return “&quot;”;\r\n      }\r\n  });\r\n}"
        },
        {
            "ID": "693",
            "typeID": "14",
            "question": "将字符串”<tr><td>{$id}</td><td>{$name}</td></tr>”中的{$id}替换成10，{$name}替换成Tony （使用正则表达式）",
            "answer": "”<tr><td>{$id}</td><td>{$id}_{$name}</td></tr>”.replace(/{$id}/g, ’10′).replace(/{$name}/g, ‘Tony’);"
        },
        {
            "ID": "692",
            "typeID": "14",
            "question": "什么是Ajax和JSON，它们的优缺点？",
            "answer": "Ajax是异步JavaScript和XML，用于在Web页面中实现异步数据交互。\r\n\r\n优点：\r\n\r\n　可以使得页面不重载全部内容的情况下加载局部内容，降低数据传输量\r\n　避免用户不断刷新或者跳转页面，提高用户体验\r\n缺点：\r\n\r\n　对搜索引擎不友好（\r\n　要实现ajax下的前后退功能成本较大\r\n　可能造成请求数的增加\r\n　跨域问题限制\r\nJSON是一种轻量级的数据交换格式，ECMA的一个子集\r\n\r\n优点：轻量级、易于人的阅读和编写，便于机器（JavaScript）解析，支持复合数据类型（数组、对象、字符串、数字）"
        },
        {
            "ID": "691",
            "typeID": "14",
            "question": "Javascript的事件流模型都有什么？",
            "answer": "事件冒泡”：事件开始由最具体的元素接受，然后逐级向上传播\r\n“事件捕捉”：事件由最不具体的节点先接收，然后逐级向下，一直到最具体的\r\n“DOM事件流”：三个阶段：事件捕捉，目标阶段，事件冒泡"
        },
        {
            "ID": "690",
            "typeID": "14",
            "question": "当一个DOM节点被点击时候，我们希望能够执行一个函数，应该怎么做？",
            "answer": "直接在DOM里绑定事件：<div onclick=”test()”></div>\r\n 在JS里通过onclick绑定：xxx.onclick = test\r\n 通过事件添加进行绑定：addEventListener(xxx, ‘click’, test)"
        },
        {
            "ID": "689",
            "typeID": "14",
            "question": "设置一个已知ID的DIV的html内容为xxxx，字体颜色设置为黑色(不使用第三方框架)",
            "answer": "var dom = document.getElementById(“ID”);\r\ndom.innerHTML = “xxxx”\r\ndom.style.color = “#000”"
        },
        {
            "ID": "688",
            "typeID": "14",
            "question": "希望获取到页面中所有的checkbox怎么做？(不使用第三方框架)",
            "answer": "var domList = document.getElementsByTagName(‘input’)\r\nvar checkBoxList = [];\r\nvar len = domList.length;　　\r\n//缓存到局部变量\r\nwhile (len--) {　　\r\n//使用while的效率会比for循环更高\r\n　　if (domList[len].type == ‘checkbox’) {\r\n    　　checkBoxList.push(domList[len]);\r\n　　}\r\n}"
        },
        {
            "ID": "687",
            "typeID": "14",
            "question": "已知ID的Input输入框，希望获取这个输入框的输入值，怎么做？(不使用第三方框架)",
            "answer": "document.getElementById(“ID”).value"
        },
        {
            "ID": "686",
            "typeID": "14",
            "question": "JavaScript的数据类型都有什么？",
            "answer": "基本数据类型：String,boolean,Number,Undefined, Null\r\n\r\n引用数据类型：Object(Array,Date,RegExp,Function)\r\n\r\n那么问题来了，如何判断某变量是否为数组数据类型？\r\n\r\n方法一.判断其是否具有“数组性质”，如slice()方法。可自己给该变量定义slice方法，故有时会失效\r\n方法二.obj instanceof Array 在某些IE版本中不正确\r\n方法三.方法一二皆有漏洞，在ECMA Script5中定义了新方法Array.isArray(), 保证其兼容性，最好的方法如下：\r\nif(typeof Array.isArray===\"undefined\")\r\n{\r\n  Array.isArray = function(arg){\r\n        return Object.prototype.toString.call(arg)===\"[object Array]\"\r\n    };  \r\n}"
        },
        {
            "ID": "685",
            "typeID": "14",
            "question": "请尽可能详尽的解释AJAX的工作原理？",
            "answer": "创建ajax对象\r\n判断数据传输方式(GET/POST)\r\n打开链接 open()\r\n发送 send()\r\n当ajax对象完成第四步（onreadystatechange）数据接收完成，判断http响应状态（status）200-300之间或者304（缓存）执行回调函数"
        },
        {
            "ID": "684",
            "typeID": "14",
            "question": "你能解释一下JavaScript中的继承是如何工作的吗？",
            "answer": "子构造函数中执行父构造函数，并用callapply改变this\r\n克隆父构造函数原型上的方法"
        },
        {
            "ID": "683",
            "typeID": "14",
            "question": "你如何优化自己的代码？",
            "answer": "代码重用\r\n避免全局变量（命名空间，封闭空间，模块化mvc..）\r\n拆分函数避免函数过于臃肿\r\n注释"
        },
        {
            "ID": "682",
            "typeID": "14",
            "question": "你如何组织自己的代码？是使用模块模式，还是使用经典继承的方法？",
            "answer": "对内：模块模式\r\n对外：继承"
        },
        {
            "ID": "681",
            "typeID": "14",
            "question": "请解释什么是Javascript的模块模式，并举出实用实例。",
            "answer": "s模块化mvc（数据层、表现层、控制层）\r\nseajs\r\n命名空间"
        },
        {
            "ID": "680",
            "typeID": "14",
            "question": "解释闭包？",
            "answer": "函数能被外部调用到，则该作用连上的所有变量都会被保存下来。"
        },
        {
            "ID": "679",
            "typeID": "14",
            "question": "解释哈希表？",
            "answer": "具有散列（映射）特性的数据模型"
        },
        {
            "ID": "678",
            "typeID": "14",
            "question": "你使用过那些Javascript库？",
            "answer": "jquery\r\nseajs \r\nyui"
        },
        {
            "ID": "677",
            "typeID": "14",
            "question": "浏览器标准模式和怪异模式之间的区别是什么？",
            "answer": "盒模型解释不同"
        },
        {
            "ID": "676",
            "typeID": "14",
            "question": "文档类型的作用是什么？你知道多少种文档类型？",
            "answer": "影响浏览器对html代码的编译渲染\r\nhtml2.0\r\nxHtml\r\nhtml5"
        },
        {
            "ID": "675",
            "typeID": "14",
            "question": "什么是FOUC？你如何来避免FOUC？",
            "answer": "由于css引入使用了@import 或者存在多个style标签以及css文件在页面底部引入使得css文件加载在html之后导致页面闪烁、花屏\r\n用link加载css文件，放在head标签里面"
        },
        {
            "ID": "674",
            "typeID": "14",
            "question": "请说出三种减低页面加载时间的方法？",
            "answer": "1、压缩css、js文件\r\n2、合并js、css文件，减少http请求\r\n3、外部js、css文件放在最底下\r\n4、减少dom操作，尽可能用变量替代不必要的dom操作"
        },
        {
            "ID": "673",
            "typeID": "14",
            "question": "为什么利用多个域名来存储网站资源会更有效？",
            "answer": "确保用户在不同地区能用最快的速度打开网站，其中某个域名崩溃用户也能通过其他郁闷访问网站"
        },
        {
            "ID": "672",
            "typeID": "14",
            "question": "请解释一下什么是语义化的HTML？",
            "answer": "内容使用特定标签，通过标签就能大概了解整体页面的布局分布"
        },
        {
            "ID": "671",
            "typeID": "14",
            "question": "写出3个使用this的典型应用？",
            "answer": "事件： 如onclick  this->发生事件的对象\r\n构造函数          this->new 出来的object\r\ncall/apply        改变this"
        },
        {
            "ID": "670",
            "typeID": "14",
            "question": "规避javascript多人开发函数重名问题？",
            "answer": "命名空间\r\n封闭空间\r\njs模块化mvc（数据层、表现层、控制层）\r\nseajs\r\n变量转换成对象的属性\r\n对象化"
        }
    ]


